# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
version: 2

before:
  hooks:
    - go mod tidy

builds:
  - id: firefly
    env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    goos:
      - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - '386'
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: '386'
    binary: '{{ .ProjectName }}_v{{ .Version }}'

archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256

signs:
  - artifacts: checksum
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  # github:
  #   owner: user
  #   name: repo

  # IDs of the archives to use.
  # Default is empty, which includes all archives.
  # ids:
  #   - foo
  #   - bar

  # If set to true, will not auto-publish the release.
  # Available only for GitHub and GitLab.
  # Default is false.
  draft: true

  # Whether to remove existing draft releases with the same name before creating
  # a new one. Only effective if `draft` is set to true.
  # Default is false.
  replace_existing_draft: true

  # Useful if you want to delay the creation of the tag in the remote.
  # You can create the tag locally, but not push it, and run GoReleaser.
  # It'll then set the `target_commitish` portion of the GitHub release to the
  # value of this field.
  # Only works on GitHub.
  # Default is empty.
  # target_commitish: "{{ .Commit }}"

  # If set, will create a release discussion in the category specified.
  #
  # Warning: do not use categories in the 'Announcement' format.
  #  Check https://github.com/goreleaser/goreleaser/issues/2304 for more info.
  #
  # Default is empty.
  discussion_category_name: General

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # Header template for the release body.
  # Defaults to empty.
  header: |
    ## Terraform Provider for Firefly {{ .Tag }}

    Welcome to another release of the Terraform Provider for Firefly!

  # Footer template for the release body.
  # Defaults to empty.
  footer: |
    ## Docker Images
    - docker pull firefly/terraform-provider-firefly:{{ .Tag }}
    - docker pull firefly/terraform-provider-firefly:latest

  # You can change the name of the release.
  # Default is `{{.Tag}}` (no prefix).
  # name_template: "{{.ProjectName}}-v{{.Version}} {{.Env.USER}}"

  # You can disable this pipe in order to not create the release on any SCM.
  # Keep in mind that this might also break things that depend on the release
  # URL, for instance, homebrew taps.
  # Defaults to false.
  disable: false

  # Set this to true if you want to disable just the artifact upload to the SCM.
  # If this is true, GoReleaser will still create the release with the
  # changelog, but won't upload any artifacts to it.
  # Defaults to false.
  skip_upload: false

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'